import QtQuick 1.1

MbItemOptions {
	property int nrOfPhases: 1

	readonly: true
	text: "#%1 %2".arg(value).arg(getText(value))
	possibleValues:[
		MbOption { description: qsTr("No error"); value: 0 },

		/* Errors (alarms) < 128 with two codes; 0-63: low alarm; 64-127: high alarm */
		MbOption { description: nrOfPhases > 1 ? qsTr("AC voltage L1 too low") : qsTr("AC voltage too low"); value: 1 + 0x00 },
		MbOption { description: nrOfPhases > 1 ? qsTr("AC voltage L1 too high") : qsTr("AC voltage too high"); value: 1 + 0x40 },
		MbOption { description: nrOfPhases > 1 ? qsTr("AC frequency L1 too low") : qsTr("AC frequency too low"); value: 2 + 0x00 },
		MbOption { description: nrOfPhases > 1 ? qsTr("AC frequency L1 too high") : qsTr("AC frequency too high"); value: 2 + 0x40 },
		MbOption { description: nrOfPhases > 1 ? qsTr("AC current L1 too low") : qsTr("AC current too low"); value: 3 + 0x00 },
		MbOption { description: nrOfPhases > 1 ? qsTr("AC current L1 too high") : qsTr("AC current too high"); value: 3 + 0x40 },
		MbOption { description: nrOfPhases > 1 ? qsTr("AC power L1 too low") : qsTr("AC power too low"); value: 4 + 0x00 },
		MbOption { description: nrOfPhases > 1 ? qsTr("AC power L1 too high") : qsTr("AC power too high"); value: 4 + 0x40 },
		MbOption { description: qsTr("Emergency stop"); value: 5 + 0x00 },
		MbOption { description: qsTr("Servo current too low"); value: 6 + 0x00 },
		MbOption { description: qsTr("Servo current too high"); value: 6 + 0x40 },
		MbOption { description: qsTr("Oil pressure too low"); value: 7 + 0x00 },
		MbOption { description: qsTr("Oil pressure too high"); value: 7 + 0x40 },
		MbOption { description: qsTr("Engine temperature too low"); value: 8 + 0x00 },
		MbOption { description: qsTr("Engine temperature too high"); value: 8 + 0x40 },
		MbOption { description: qsTr("Winding temperature too low"); value: 9 + 0x00 },
		MbOption { description: qsTr("Winding temperature too high"); value: 9 + 0x40 },
		MbOption { description: qsTr("Exhaust temperature too low"); value: 10 + 0x00 },
		MbOption { description: qsTr("Exhaust temperature too high"); value: 10 + 0x40 },
		MbOption { description: qsTr("Starter current too low"); value: 13 + 0x00 },
		MbOption { description: qsTr("Starter current too high"); value: 13 + 0x40 },
		MbOption { description: qsTr("Glow current too low"); value: 14 + 0x00 },
		MbOption { description: qsTr("Glow current too high"); value: 14 + 0x40 },
		MbOption { description: qsTr("Glow current too low"); value: 15 + 0x00 },
		MbOption { description: qsTr("Glow current too high"); value: 15 + 0x40 },
		MbOption { description: qsTr("Fuel holding magnet current too low"); value: 16 + 0x00 },
		MbOption { description: qsTr("Fuel holding magnet current too high"); value: 16 + 0x40 },
		MbOption { description: qsTr("Stop solenoid hold coil current too low"); value: 17 + 0x00 },
		MbOption { description: qsTr("Stop solenoid hold coil current too high"); value: 17 + 0x40 },
		MbOption { description: qsTr("Stop solenoid pull coil current too low "); value: 18 + 0x00 },
		MbOption { description: qsTr("Stop solenoid pull coil current too high"); value: 18 + 0x40 },
		MbOption { description: qsTr("Optional DC out current too low"); value: 19 + 0x00 },
		MbOption { description: qsTr("Optional DC out current too high"); value: 19 + 0x40 },
		MbOption { description: qsTr("5V output voltage too low"); value: 20 + 0x00 },
		MbOption { description: qsTr("5V output current too high"); value: 20 + 0x40 },
		MbOption { description: qsTr("Boost output current too low"); value: 21 + 0x00 },
		MbOption { description: qsTr("Boost output current too high"); value: 21 + 0x40 },
		MbOption { description: qsTr("Panel supply current too high"); value: 22 + 0x40 },
		MbOption { description: qsTr("Starter battery voltage too low"); value: 25 + 0x00 },
		MbOption { description: qsTr("Starter battery voltage too high"); value: 25 + 0x40 },
		MbOption { description: qsTr("Startup aborted (rotation too low)"); value: 26 + 0x00 },
		MbOption { description: qsTr("Startup aborted (rotation too high)"); value: 26 + 0x40 },
		MbOption { description: qsTr("Rotation too low"); value: 28 + 0x00 },
		MbOption { description: qsTr("Rotation too high"); value: 28 + 0x40 },
		MbOption { description: qsTr("Power contactor current too low"); value: 29 + 0x00 },
		MbOption { description: qsTr("Power contactor current too high"); value: 29 + 0x40 },
		MbOption { description: qsTr("AC voltage L2 too low"); value: 30 + 0x00 },
		MbOption { description: qsTr("AC voltage L2 too high"); value: 30 + 0x40 },
		MbOption { description: qsTr("AC frequency L2 too low"); value: 31 + 0x00 },
		MbOption { description: qsTr("AC frequency L2 too high"); value: 31 + 0x40 },
		MbOption { description: qsTr("AC current L2 too low"); value: 32 + 0x00 },
		MbOption { description: qsTr("AC current L2 too high"); value: 32 + 0x40 },
		MbOption { description: qsTr("AC power L2 too low"); value: 33 + 0x00 },
		MbOption { description: qsTr("AC power L2 too high"); value: 33 + 0x40 },
		MbOption { description: qsTr("AC voltage L3 too low"); value: 34 + 0x00 },
		MbOption { description: qsTr("AC voltage L3 too high"); value: 34 + 0x40 },
		MbOption { description: qsTr("AC frequency L3 too low"); value: 35 + 0x00 },
		MbOption { description: qsTr("AC frequency L3 too high"); value: 35 + 0x40 },
		MbOption { description: qsTr("AC current L3 too low"); value: 36 + 0x00 },
		MbOption { description: qsTr("AC current L3 too high"); value: 36 + 0x40 },
		MbOption { description: qsTr("AC power L3 too low"); value: 37 + 0x00 },
		MbOption { description: qsTr("AC power L3 too high"); value: 37 + 0x40 },
		MbOption { description: qsTr("Fuel temperature too low"); value: 62 + 0x00 },
		MbOption { description: qsTr("Fuel temperature too high"); value: 62 + 0x40 },
		MbOption { description: qsTr("Fuel level too low"); value: 63 + 0x00 },
		MbOption { description: qsTr("Fuel level too high"); value: 63 + 0x40 },

		/* Errors (>= 128) with one code */
		MbOption { description: qsTr("Lost control unit"); value: 130 },
		MbOption { description: qsTr("Lost panel"); value: 131 },
		MbOption { description: qsTr("Service needed"); value: 132 },
		MbOption { description: qsTr("Lost 3-phase module"); value: 133 },
		MbOption { description: qsTr("Lost AGT module"); value: 134 },
		MbOption { description: qsTr("Synchronization failure"); value: 135 },
		MbOption { description: qsTr("Intake airfilter"); value: 137 },
		MbOption { description: qsTr("Lost sync. module"); value: 139 },
		MbOption { description: qsTr("Load-balance failed"); value: 140 },
		MbOption { description: qsTr("Sync-mode deactivated"); value: 141 },
		MbOption { description: qsTr("Engine controller"); value: 142 },
		MbOption { description: qsTr("Rotating field wrong"); value: 148 },
		MbOption { description: qsTr("Fuel level sensor lost"); value: 149 },

		/* Error codes for iControl only */
		MbOption { description: qsTr("Init failed"); value: 150 },
		MbOption { description: qsTr("Watchdog"); value: 151 },
		MbOption { description: qsTr("Out: winding"); value: 152 },
		MbOption { description: qsTr("Out: exhaust"); value: 153 },
		MbOption { description: qsTr("Out: Cyl. head"); value: 154 },
		MbOption { description: qsTr("Inverter over temperature"); value: 155 },
		MbOption { description: qsTr("Inverter overload"); value: 156 },
		MbOption { description: qsTr("Inverter communication lost"); value: 157 },
		MbOption { description: qsTr("Inverter sync failed"); value: 158 },
		MbOption { description: qsTr("CAN communication lost"); value: 159 },
		MbOption { description: qsTr("L1 overload"); value: 160 },
		MbOption { description: qsTr("L2 overload"); value: 161 },
		MbOption { description: qsTr("L3 overload"); value: 162 },
		MbOption { description: qsTr("DC overload"); value: 163 },
		MbOption { description: qsTr("DC overvoltage"); value: 164 },
		MbOption { description: qsTr("Emergency stop"); value: 165 },
		MbOption { description: qsTr("No connection"); value: 166}
	]
}
